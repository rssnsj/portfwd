Design NAT machanism of TCP layer to SOCKS protocol transforming.
Under development.
Project home: https://socksnat.googlecode.com/

Roadmap:

This project includes tiny kernel modification and a user-space daemon.

1. Solution of retrieving target address: Provide an 'ioctl' method in nf_conntrack_l3proto_ipv4_compat.c, so that 'ioctl' rapidly do hash query to get the target IP/address by source IP/port and knows where it should connect to via SOCKS tunnel.
  User-space program queries /proc/net/nf_conntrack.
  The port forwarding can be simply issued by these Netfilter rules:
    iptables -t nat -A PREROUTING -s 192.168.1.0/24 -p tcp -j DNAT --to 127.0.0.1:7070
    iptables -t nat -A PREROUTING -s 192.168.1.0/24 -p udp -j DNAT --to 127.0.0.1:7070

2. User-space program 'socksnatd' listens a TCP port and a UDP port on 127.0.0.1 (e.g., 7070 as the above). When it receives a new TCP connection, first it gets the requsted target IP/port by 'ioctl(/proc/socksnat/tcp, client_port)', and then connects to the real server through SOCKS protocol.

